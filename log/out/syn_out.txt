<prog> ::= <classDecl> <progBody>
<classDecl> ::= class id { <varThenFunc> } ; <classDecl>
<varThenFunc> ::= <type> id <varOrFunc>
<type> ::= id
<varOrFunc> ::= <arraySize> ; <varThenFunc>
<arraySize> ::= EPSILON
<varThenFunc> ::= <type> id <varOrFunc>
<type> ::= <primitiveType>
<primitiveType> ::= float
<varOrFunc> ::= ( <fparams> ) <funcBody> ; <funcDef>
<fParams> ::= EPSILON
<funcBody> ::= { <varThenStat> }
<varThenStat> ::= <pimitiveType> <varTail> <varThenStat>
<primitiveType> ::= int
<varTail> ::= id <arraySize> ;
<arraySize> ::= [ inum ] <arraySize>
<arraySize> ::= [ inum ] <arraySize>
<arraySize> ::= EPSILON
<varThenStat> ::= id <varOrStat>
<varOrStat> ::= <indice> <idnest> <assignOp> <expr> ; <mStatement>
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= EPSILON
<idnest> ::= EPSILON
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <statementRes>
<statementRes> ::= return ( <expr> ) ;
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= <indice> <varOrFuncCallTailTail>
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= EPSILON
<varOrFuncCallTailTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= EPSILON
<funcDef> ::= EPSILON
<classDecl> ::= EPSILON
<progBody> ::= <funcDef> program <funcBody> ;
<funcDef> ::= EPSILON
<funcBody> ::= { <varThenStat> }
<varThenStat> ::= <pimitiveType> <varTail> <varThenStat>
<primitiveType> ::= int
<varTail> ::= id <arraySize> ;
<arraySize> ::= [ inum ] <arraySize>
<arraySize> ::= EPSILON
<varThenStat> ::= id <varOrStat>
<varOrStat> ::= <varTail> <varThenStat>
<varTail> ::= id <arraySize> ;
<arraySize> ::= [ inum ] <arraySize>
<arraySize> ::= EPSILON
<varThenStat> ::= id <varOrStat>
<varOrStat> ::= <indice> <idnest> <assignOp> <expr> ; <mStatement>
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= EPSILON
<idnest> ::= EPSILON
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= <indice> <varOrFuncCallTailTail>
<indice> ::= EPSILON
<varOrFuncCallTailTail> ::= . <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= ( <aParams> )
<aParams> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <assignStat> ;
<assignStat> ::= <variable> <assingOp> <expr>
<variable> ::= id <indice> <idnest>
<indice> ::= EPSILON
<idnest> ::= EPSILON
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= <indice> <varOrFuncCallTailTail>
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= EPSILON
<varOrFuncCallTailTail> ::= . <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= ( <aParams> )
<aParams> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <assignStat> ;
<assignStat> ::= <variable> <assingOp> <expr>
<variable> ::= id <indice> <idnest>
<indice> ::= [ <arithExpr> ] <indice>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<indice> ::= EPSILON
<idnest> ::= EPSILON
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <statementRes>
<statementRes> ::= get ( <expr> ) ;
<variable> ::= id <indice> <idnest>
<indice> ::= EPSILON
<idnest> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <statementRes>
<statementRes> ::= put ( <expr> ) ;
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= EPSILON