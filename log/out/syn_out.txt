<prog> ::= <classDecl> <progBody>
<classDecl> ::= EPSILON
<progBody> ::= <funcDef> program <funcBody> ;
<funcDef> ::= EPSILON
<funcBody> ::= { <varThenStat> }
<varThenStat> ::= <pimitiveType> <varTail> <varThenStat>
<primitiveType> ::= int
<varTail> ::= id <arraySize> ;
<arraySize> ::= EPSILON
<varThenStat> ::= <statementRes> <mStatement>
<statementRes> ::= get ( <variable> ) ;
<variable> ::= id <indice> <idnest>
<indice> ::= EPSILON
<idnest> ::= EPSILON
<mStatement> ::= <statement> <mStatement>
<statement> ::= <statementRes>
<statementRes> ::= for ( <type> id <assignOp> <expr> ; relExpr ; assignStat ) statBlock ;
<type> ::= <primitiveType>
<primitiveType> ::= int
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<relExpr> ::= <arithExpr> <relOp> <arithExpr>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relOp> ::= <
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<assignStat> ::= <variable> <assingOp> <expr>
<variable> ::= id <indice> <idnest>
<indice> ::= EPSILON
<idnest> ::= EPSILON
<assignOp> ::= =
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= <addOp> <term> <arithExprTail>
<addOp> ::= +
<term> ::= <factor> <termTail>
<factor> ::= <num>
<num> ::= inum
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<statBlock> ::= { <mStatement> }
<mStatement> ::= <statement> <mStatement>
<statement> ::= <statementRes>
<statementRes> ::= put ( <expr> ) ;
<expr> ::= <arithExpr> <relExprPart>
<arithExpr> ::= <term> <arithExprTail>
<term> ::= <factor> <termTail>
<factor> ::= <varOrFuncCall>
<varOrFuncCall> ::= id <varOrFuncCallTail>
<varOrFuncCallTail> ::= EPSILON
<termTail> ::= EPSILON
<arithExprTail> ::= EPSILON
<relExprPart> ::= EPSILON
<mStatement> ::= EPSILON
<mStatement> ::= EPSILON